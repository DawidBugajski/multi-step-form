~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~REDUX~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stworzyć katalog "store"
 - W pliku "actions.js" zdefiniuj akcje potrzebne do aplikacji - Akcje te służą do zmieniania stanu aplikacji.
 - W pliku "reducers.js" zdefiniuj reducery odpowiedzialne za przetwarzanie akcji i aktualizację stanu aplikacji - Reducery służą do zmiany stanu aplikacji na podstawie akcji.
 - W pliku "store/index.js" stwórz sklep redux i połącz go z aplikacją przy pomocy <Provider> z react-redux

W komponencie AppContainer zaimportować Provider z react-redux i użyć go do otaczania swojego aplikacji. Dzięki temu każdy komponent będzie miał dostęp do stanu aplikacji.


Aplikacja musi zapamiętać:
- aktualny step (1-4) SET_CURRENT_STEP
- wybrany rodzaj subsrybcji z komponentu SubscribePlan oraz jego cena (na podstawie wyboru w SubscribeType - roczna albo miesięczna )  
- wybrany rodzaj płatności z komponentu SubscribeType (miesięczny/roczny) 
- wybrane dodatkowe addony z komponentu Addons oraz jego cena (na podstawie wyboru w SubscribeType - roczna albo miesięczna )
- Łączna wartość do zapłaty w Step4 ((na podstawie wyboru w SubscribeType - roczna albo miesięczna )

*W store/actions.js należy utworzyć akcje typu SET_CURRENT_STEP, SET_SUBSCRIPTION_TYPE, SET_SUBSCRIPTION_PRICE, SET_PAYMENT_TYPE, SET_ADDONS, SET_ADDONS_PRICE, SET_TOTAL_PRICE do ustawiania odpowiednich wartości w stanie aplikacji. 
*W pliku store/reducers.js należy napisać reducery odpowiedzialne za zmianę stanu aplikacji na podstawie tych akcji.

W komponentach, gdzie będziesz chciał wyświetlić te dane, takich jak komponent Step4 lub SubscribePlan, użyć useSelector z react-redux aby pobrać dane z magazynu i wyświetlić je na ekranie.

W celu przesyłania danych z komponentów do magazynu, należy użyć useDispatch z react-redux aby pobrać funkcję dispatch i używać jej do wywoływania akcji ustawiających dane w magazynie.

W głównym pliku index.js należy utworzyć magazyn za pomocą createStore z redux i zawinąć aplikację za pomocą <Provider> z react-redux, aby udostępnić magazyn dla całej aplikacji.